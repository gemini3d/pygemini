name: ci

env:
  CMAKE_PREFIX_PATH: ~/gemlibs
  GEMINI_ROOT: ~/gemini3d
  GEMINI_CIROOT: ~/ci
  CMAKE_BUILD_TYPE: Release

on:
  push:
    paths:
    - "**.py"
    - ".github/workflows/ci.yml"
    pull_request:
    - "**.py"
    - ".github/workflows/ci.yml"


jobs:

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        python-version: [ "3.8", "3.9" , "3.10" ]
    name: Lint Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install -e .[lint]
      timeout-minutes: 2

    - run: flake8
    - run: mypy


  linux-macos:

    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
        cfg: [{os: 'ubuntu-latest', fc: 'gfortran'},
              {os: 'macos-latest', fc: 'gfortran-11'}]

    runs-on: ${{ matrix.cfg.os }}

    env:
      FC: ${{ matrix.cfg.fc }}
      HOMEBREW_NO_INSTALL_CLEANUP: 1

    name: ${{ matrix.cfg.os }} Python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install .[tests,plots]
      timeout-minutes: 5
      # transient CI download speed

    - run: python -m gemini3d.install -sudo
      if: runner.os == 'Linux'
      timeout-minutes: 2

    - run: python -m gemini3d.install
      if: runner.os == 'macOS'
      timeout-minutes: 7
      # transient CI download speed

    - name: Unit Tests
      run: pytest --pyargs gemini3d.tests.unit
      timeout-minutes: 2

    - name: build msis_setup and other Gemini3D prereqs
      run: python -c "import gemini3d; gemini3d.setup_libs(prefix='${{ env.CMAKE_PREFIX_PATH }}')"
      timeout-minutes: 10

    - name: build gemini3d.run, gemini.bin
      run: python -c "import gemini3d; gemini3d.setup('${{ env.GEMINI_ROOT }}', targets=['gemini3d.run', 'gemini.bin'])"
      timeout-minutes: 10

    - name: Integration Tests
      run: pytest --pyargs gemini3d.tests.intg
      timeout-minutes: 10

# codecov coverage
    # - run: pip install codecov pytest-cov
    # - run: pytest --cov --cov-report=xml
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1
