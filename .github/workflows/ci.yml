name: ci

env:
  GEMINI_CIROOT: ~/ci
  CMAKE_BUILD_TYPE: Release
  HOMEBREW_NO_INSTALL_CLEANUP: 1

on:
  push:
    paths:
    - "**.py"
    - ".github/workflows/ci.yml"
    - "!scripts/**"


jobs:

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [ "3.8", "3.9", "3.10" ]
        include:
        - os: macos-latest
          python-version: "3.10"
        - os: windows-latest
          python-version: "3.10"

    name: Lint ${{ matrix.os }} Python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - run: python -m pip install -e .[lint]
      timeout-minutes: 2

    - run: flake8
    - run: mypy


  linux-macos:

    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
        os: [ubuntu-latest]
        include:
        - os: macos-latest
          python-version: '3.10'

    runs-on: ${{ matrix.os }}

    name: ${{ matrix.os }} Python ${{ matrix.python-version }}

    steps:

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v3
      with:
        repository: gemini3d/external
        path: gemext

    - name: Install Prereqs (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo $(cmake -P gemext/scripts/requirements.cmake) libmumps-dev

    - name: Install Prereqs (Macos)
      if: runner.os == 'macOS'
      run: |
        $(cmake -P gemext/scripts/requirements.cmake)
        brew reinstall gcc

    - name: Install Gemini3D libraries
      timeout-minutes: 15
      run: |
        cmake -B build -Dfind:BOOL=true --install-prefix ${{ runner.temp }}
        cmake --build build --parallel
        cmake --install build
      working-directory: gemext

    - name: Checkout Gemini3D
      uses: actions/checkout@v3
      with:
        repository: gemini3d/gemini3d
        path: gemini3d

    - name: Install Gemini3D
      timeout-minutes: 15
      run: |
        cmake -B build --install-prefix ${{ runner.temp }} -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}
        cmake --build build --parallel
        cmake --install build
      working-directory: gemini3d

    - name: Git Checkout ${{ github.action_repository }}
      uses: actions/checkout@v3

    - name: Install Python packages
      run: python -m pip install .[tests,plots]
      timeout-minutes: 5
      # transient CI download speed

    - name: Unit and Integration Tests
      run: pytest
      timeout-minutes: 15
      env:
        GEMINI_ROOT: ${{ runner.temp }}

# codecov coverage
    # - run: pip install codecov pytest-cov
    # - run: pytest --cov --cov-report=xml
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1
