runs:

  using: 'composite'

  steps:

  - name: GCC compiler (macOS)
    shell: bash
    if: runner.os == 'macOS'
    run: |
      echo "CC=gcc-14" >> $GITHUB_ENV
      echo "CXX=g++-14" >> $GITHUB_ENV
      echo "FC=gfortran-14" >> $GITHUB_ENV

  - name: Checkout GemGI (for simulation config.nml inputs)
    uses: actions/checkout@v4
    with:
      repository: gemini3d/gemci
      path: ${{ github.workspace }}/gemci

  - name: Cache install Gemini3D
    id: cache-gemini
    uses: actions/cache@v4
    with:
      path: |
        ${{ env.CMAKE_INSTALL_PREFIX }}
      key: ${{ runner.os }}-gemini3d

  - name: Checkout Gemini3D
    if: steps.cache-gemini.outputs.cache-hit != 'true'
    uses: actions/checkout@v4
    with:
      repository: gemini3d/gemini3d
      path: gemini3d
      submodules: true

  - name: non-cache Install Gemini3D
    if: steps.cache-gemini.outputs.cache-hit != 'true'
    shell: bash
    run: |
      cmake -B build
      cmake --build build
      cmake --install build
    working-directory: gemini3d
